# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import DB_Service_pb2 as DB__Service__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in DB_Service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DBServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UsersInsert = channel.unary_unary(
                '/DBService/UsersInsert',
                request_serializer=DB__Service__pb2.UsersInsertRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.UsersInsertResponse.FromString,
                _registered_method=True)
        self.UsersDelete = channel.unary_unary(
                '/DBService/UsersDelete',
                request_serializer=DB__Service__pb2.UsersDeleteRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.UsersDeleteResponse.FromString,
                _registered_method=True)
        self.UsersSelect = channel.unary_unary(
                '/DBService/UsersSelect',
                request_serializer=DB__Service__pb2.UsersSelectRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.UsersSelectResponse.FromString,
                _registered_method=True)
        self.UsersUpdate = channel.unary_unary(
                '/DBService/UsersUpdate',
                request_serializer=DB__Service__pb2.UsersUpdateRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.UsersUpdateResponse.FromString,
                _registered_method=True)
        self.ProductsInsert = channel.unary_unary(
                '/DBService/ProductsInsert',
                request_serializer=DB__Service__pb2.ProductsInsertRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.ProductsInsertResponse.FromString,
                _registered_method=True)
        self.ProductsDelete = channel.unary_unary(
                '/DBService/ProductsDelete',
                request_serializer=DB__Service__pb2.ProductsDeleteRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.ProductsDeleteResponse.FromString,
                _registered_method=True)
        self.ProductsSelect = channel.unary_unary(
                '/DBService/ProductsSelect',
                request_serializer=DB__Service__pb2.ProductsSelectRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.ProductsSelectResponse.FromString,
                _registered_method=True)
        self.ProductsUpdate = channel.unary_unary(
                '/DBService/ProductsUpdate',
                request_serializer=DB__Service__pb2.ProductsUpdateRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.ProductsUpdateResponse.FromString,
                _registered_method=True)
        self.OrdersInsert = channel.unary_unary(
                '/DBService/OrdersInsert',
                request_serializer=DB__Service__pb2.OrdersInsertRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.OrdersInsertResponse.FromString,
                _registered_method=True)
        self.OrdersDelete = channel.unary_unary(
                '/DBService/OrdersDelete',
                request_serializer=DB__Service__pb2.OrdersDeleteRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.OrdersDeleteResponse.FromString,
                _registered_method=True)
        self.OrdersSelect = channel.unary_unary(
                '/DBService/OrdersSelect',
                request_serializer=DB__Service__pb2.OrdersSelectRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.OrdersSelectResponse.FromString,
                _registered_method=True)
        self.OrdersUpdate = channel.unary_unary(
                '/DBService/OrdersUpdate',
                request_serializer=DB__Service__pb2.OrdersUpdateRequest.SerializeToString,
                response_deserializer=DB__Service__pb2.OrdersUpdateResponse.FromString,
                _registered_method=True)


class DBServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UsersInsert(self, request, context):
        """Users
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UsersDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UsersSelect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UsersUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductsInsert(self, request, context):
        """Products
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductsDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductsSelect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProductsUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrdersInsert(self, request, context):
        """Orders
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrdersDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrdersSelect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrdersUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UsersInsert': grpc.unary_unary_rpc_method_handler(
                    servicer.UsersInsert,
                    request_deserializer=DB__Service__pb2.UsersInsertRequest.FromString,
                    response_serializer=DB__Service__pb2.UsersInsertResponse.SerializeToString,
            ),
            'UsersDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.UsersDelete,
                    request_deserializer=DB__Service__pb2.UsersDeleteRequest.FromString,
                    response_serializer=DB__Service__pb2.UsersDeleteResponse.SerializeToString,
            ),
            'UsersSelect': grpc.unary_unary_rpc_method_handler(
                    servicer.UsersSelect,
                    request_deserializer=DB__Service__pb2.UsersSelectRequest.FromString,
                    response_serializer=DB__Service__pb2.UsersSelectResponse.SerializeToString,
            ),
            'UsersUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.UsersUpdate,
                    request_deserializer=DB__Service__pb2.UsersUpdateRequest.FromString,
                    response_serializer=DB__Service__pb2.UsersUpdateResponse.SerializeToString,
            ),
            'ProductsInsert': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductsInsert,
                    request_deserializer=DB__Service__pb2.ProductsInsertRequest.FromString,
                    response_serializer=DB__Service__pb2.ProductsInsertResponse.SerializeToString,
            ),
            'ProductsDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductsDelete,
                    request_deserializer=DB__Service__pb2.ProductsDeleteRequest.FromString,
                    response_serializer=DB__Service__pb2.ProductsDeleteResponse.SerializeToString,
            ),
            'ProductsSelect': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductsSelect,
                    request_deserializer=DB__Service__pb2.ProductsSelectRequest.FromString,
                    response_serializer=DB__Service__pb2.ProductsSelectResponse.SerializeToString,
            ),
            'ProductsUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ProductsUpdate,
                    request_deserializer=DB__Service__pb2.ProductsUpdateRequest.FromString,
                    response_serializer=DB__Service__pb2.ProductsUpdateResponse.SerializeToString,
            ),
            'OrdersInsert': grpc.unary_unary_rpc_method_handler(
                    servicer.OrdersInsert,
                    request_deserializer=DB__Service__pb2.OrdersInsertRequest.FromString,
                    response_serializer=DB__Service__pb2.OrdersInsertResponse.SerializeToString,
            ),
            'OrdersDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.OrdersDelete,
                    request_deserializer=DB__Service__pb2.OrdersDeleteRequest.FromString,
                    response_serializer=DB__Service__pb2.OrdersDeleteResponse.SerializeToString,
            ),
            'OrdersSelect': grpc.unary_unary_rpc_method_handler(
                    servicer.OrdersSelect,
                    request_deserializer=DB__Service__pb2.OrdersSelectRequest.FromString,
                    response_serializer=DB__Service__pb2.OrdersSelectResponse.SerializeToString,
            ),
            'OrdersUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.OrdersUpdate,
                    request_deserializer=DB__Service__pb2.OrdersUpdateRequest.FromString,
                    response_serializer=DB__Service__pb2.OrdersUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('DBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DBService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UsersInsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/UsersInsert',
            DB__Service__pb2.UsersInsertRequest.SerializeToString,
            DB__Service__pb2.UsersInsertResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UsersDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/UsersDelete',
            DB__Service__pb2.UsersDeleteRequest.SerializeToString,
            DB__Service__pb2.UsersDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UsersSelect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/UsersSelect',
            DB__Service__pb2.UsersSelectRequest.SerializeToString,
            DB__Service__pb2.UsersSelectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UsersUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/UsersUpdate',
            DB__Service__pb2.UsersUpdateRequest.SerializeToString,
            DB__Service__pb2.UsersUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProductsInsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/ProductsInsert',
            DB__Service__pb2.ProductsInsertRequest.SerializeToString,
            DB__Service__pb2.ProductsInsertResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProductsDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/ProductsDelete',
            DB__Service__pb2.ProductsDeleteRequest.SerializeToString,
            DB__Service__pb2.ProductsDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProductsSelect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/ProductsSelect',
            DB__Service__pb2.ProductsSelectRequest.SerializeToString,
            DB__Service__pb2.ProductsSelectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProductsUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/ProductsUpdate',
            DB__Service__pb2.ProductsUpdateRequest.SerializeToString,
            DB__Service__pb2.ProductsUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OrdersInsert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/OrdersInsert',
            DB__Service__pb2.OrdersInsertRequest.SerializeToString,
            DB__Service__pb2.OrdersInsertResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OrdersDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/OrdersDelete',
            DB__Service__pb2.OrdersDeleteRequest.SerializeToString,
            DB__Service__pb2.OrdersDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OrdersSelect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/OrdersSelect',
            DB__Service__pb2.OrdersSelectRequest.SerializeToString,
            DB__Service__pb2.OrdersSelectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def OrdersUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/DBService/OrdersUpdate',
            DB__Service__pb2.OrdersUpdateRequest.SerializeToString,
            DB__Service__pb2.OrdersUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
