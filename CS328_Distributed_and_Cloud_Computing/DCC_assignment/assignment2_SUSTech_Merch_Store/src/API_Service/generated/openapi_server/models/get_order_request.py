from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetOrderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_id=None, product_id=None):  # noqa: E501
        """GetOrderRequest - a model defined in OpenAPI

        :param user_id: The user_id of this GetOrderRequest.  # noqa: E501
        :type user_id: int
        :param product_id: The product_id of this GetOrderRequest.  # noqa: E501
        :type product_id: int
        """
        self.openapi_types = {
            'user_id': int,
            'product_id': int
        }

        self.attribute_map = {
            'user_id': 'user_id',
            'product_id': 'product_id'
        }

        self._user_id = user_id
        self._product_id = product_id

    @classmethod
    def from_dict(cls, dikt) -> 'GetOrderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetOrderRequest of this GetOrderRequest.  # noqa: E501
        :rtype: GetOrderRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> int:
        """Gets the user_id of this GetOrderRequest.


        :return: The user_id of this GetOrderRequest.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this GetOrderRequest.


        :param user_id: The user_id of this GetOrderRequest.
        :type user_id: int
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")  # noqa: E501

        self._user_id = user_id

    @property
    def product_id(self) -> int:
        """Gets the product_id of this GetOrderRequest.


        :return: The product_id of this GetOrderRequest.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: int):
        """Sets the product_id of this GetOrderRequest.


        :param product_id: The product_id of this GetOrderRequest.
        :type product_id: int
        """

        self._product_id = product_id
