openapi: 3.0.1
info:
  description: A simple API to demonstrate JWT authentication with Swagger UI
  title: Example JWT-Protected API
  version: 1.0.0
servers:
- url: /
paths:
  /:
    get:
      operationId: root_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GreetingData'
          description: A greeting
      summary: Get a greeting
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /cancelOrder:
    get:
      operationId: cancel_order_get
      parameters:
      - description: The ID of the order
        explode: true
        in: query
        name: id
        required: true
        schema:
          example: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
          description: Order cancelled successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidID'
          description: Invalid order ID
      security:
      - BearerAuth: []
      summary: Cancel an order
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /deactivateUser:
    get:
      operationId: deactivate_user_get
      parameters:
      - description: The ID of the user
        explode: true
        in: query
        name: id
        required: true
        schema:
          example: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateUserResponse'
          description: User deactivated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidID'
          description: Invalid user ID
      security:
      - BearerAuth: []
      summary: Deactivate a user
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /getOrder:
    post:
      operationId: get_order_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: Order placed successfully
        "401":
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderError'
          description: Order failed
        "404":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Add an order
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /getProduct:
    get:
      operationId: get_product_get
      parameters:
      - description: The ID of the product
        explode: true
        in: query
        name: id
        required: true
        schema:
          example: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: Product found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidID'
          description: Invalid product ID
      summary: Get a product by ID
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /getUser:
    post:
      operationId: get_user_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: User found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidCredentials'
          description: Invalid credentials
      summary: Get a user by username and password
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /listProducts:
    get:
      operationId: list_products_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsData'
          description: A list of products
      summary: Get a list of products
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /login:
    post:
      operationId: login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: Successfully authenticated
        "401":
          description: Unauthorized
        "404":
          description: Unauthorized
      summary: Authenticate and get a JWT token
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /placeOrder:
    post:
      operationId: place_order_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceOrderResponse'
          description: Order placed successfully
        "401":
          description: Unauthorized
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceOrderError'
          description: Order failed
        "404":
          description: Unauthorized
      security:
      - BearerAuth: []
      summary: Add an order
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /protected:
    get:
      operationId: protected_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedData'
          description: Protected data response
        "401":
          description: Unauthorized - missing or invalid JWT
      security:
      - BearerAuth: []
      summary: Access protected data
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /register:
    post:
      operationId: register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: User registered successfully
        "400":
          description: Registration failed
      summary: Register a new user
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /updateUser:
    post:
      operationId: update_user_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: User updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateError'
          description: Update failed
      security:
      - BearerAuth: []
      summary: Update a user
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    GreetingData:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: GreetingData
      type: object
    ListProductsData:
      items:
        $ref: '#/components/schemas/GetProductResponse'
      type: array
    GetProductResponse:
      description: Product data
      example:
        price: 6.027456183070403
        name: name
        description: description
        created_at: created_at
        id: 0
        category: category
        stock: 1
        slogan: slogan
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
        description:
          title: description
          type: string
        category:
          title: category
          type: string
        price:
          title: price
          type: number
        slogan:
          title: slogan
          type: string
        stock:
          title: stock
          type: integer
        created_at:
          title: created_at
          type: string
      title: GetProductResponse
      type: object
    RegisterRequest:
      example:
        password: password
        email: email
        sid: sid
        username: username
      properties:
        sid:
          title: sid
          type: string
        username:
          title: username
          type: string
        password:
          description: a password field
          format: password
          title: password
          type: string
        email:
          description: a email field
          title: email
          type: string
      required:
      - password
      - sid
      - username
      title: RegisterRequest
      type: object
    DeactivateUserResponse:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: DeactivateUserResponse
      type: object
    GetUserRequest:
      example:
        password: password
        username: username
      properties:
        username:
          title: username
          type: string
        password:
          description: a password field
          format: password
          title: password
          type: string
      required:
      - password
      - username
      title: GetUserRequest
      type: object
    GetUserResponse:
      description: User data
      example:
        password: password
        created_at: created_at
        id: 0
        email: email
        sid: sid
        username: username
      properties:
        id:
          title: id
          type: integer
        sid:
          title: sid
          type: string
        username:
          title: username
          type: string
        email:
          title: email
          type: string
        password:
          title: password
          type: string
        created_at:
          title: created_at
          type: string
      title: GetUserResponse
      type: object
    UpdateUserRequest:
      example:
        password: password
        created_at: created_at
        id: 0
        email: email
        sid: sid
        username: username
      properties:
        id:
          title: id
          type: integer
        sid:
          title: sid
          type: string
        username:
          title: username
          type: string
        email:
          title: email
          type: string
        password:
          title: password
          type: string
        created_at:
          title: created_at
          type: string
      required:
      - id
      title: UpdateUserRequest
      type: object
    LoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          title: username
          type: string
        password:
          description: a password field
          format: password
          title: password
          type: string
      required:
      - password
      - username
      title: LoginRequest
      type: object
    LoginResponse:
      example:
        token: token
      properties:
        token:
          description: JWT token passed back to the client
          title: token
          type: string
      title: LoginResponse
      type: object
    PlaceOrderRequest:
      example:
        quantity: 1
        total_price: 5.962133916683182
        user_id: 0
        product_id: 6
      properties:
        user_id:
          description: The ID of the user
          title: user_id
          type: integer
        product_id:
          description: The ID of the product
          title: product_id
          type: integer
        quantity:
          description: The quantity of the product to order
          title: quantity
          type: integer
        total_price:
          description: The total price of the order
          title: total_price
          type: number
      required:
      - product_id
      - quantity
      - user_id
      title: PlaceOrderRequest
      type: object
    PlaceOrderResponse:
      example:
        quantity: 5
        total_price: 5.637376656633329
        user_id: 6
        product_id: 1
        created_at: created_at
        id: 0
      properties:
        id:
          title: id
          type: integer
        user_id:
          title: user_id
          type: integer
        product_id:
          title: product_id
          type: integer
        quantity:
          title: quantity
          type: integer
        total_price:
          title: total_price
          type: number
        created_at:
          title: created_at
          type: string
      title: PlaceOrderResponse
      type: object
    PlaceOrderError:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: PlaceOrderError
      type: object
    CancelOrderResponse:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: CancelOrderResponse
      type: object
    GetOrderRequest:
      example:
        user_id: 0
        product_id: 6
      properties:
        user_id:
          title: user_id
          type: integer
        product_id:
          title: product_id
          type: integer
      required:
      - user_id
      title: GetOrderRequest
      type: object
    GetOrderResponse:
      items:
        $ref: '#/components/schemas/PlaceOrderResponse'
      type: array
    GetOrderError:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: GetOrderError
      type: object
    ProtectedData:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: ProtectedData
      type: object
    InvalidID:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: InvalidID
      type: object
    InvalidCredentials:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: InvalidCredentials
      type: object
    UpdateError:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: UpdateError
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_BearerAuth
