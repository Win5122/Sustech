syntax = "proto3";

// Stlye Guide: https://protobuf.dev/programming-guides/style/.
// Files should be named `lower_snake_case.proto`.

// [START go_declaration] (https://protobuf.dev/getting-started/gotutorial/#protocol-format)
option go_package = "./pb";
// [END go_declaration]

/*
Services are what the servers provide for the clients. Specifically for gRPC.
Use PascalCase (with an initial capital) for both the service name and any RPC method names.
*/
service AssistantService {
  // Constructs a greeting message based on the given information of the user.
  rpc GreetWithInfo(GreetRequest) returns (GreetResponse);
  // Multiply two given numbers and give back the output (with the inputs).
  rpc Multiply(MultRequest) returns (MultResponse);
}

/*
Messages are exchanged between clients and servers.
Use PascalCase (with an initial capital) for message names: SongServerRequest. 
Prefer to capitalize abbreviations as single words: GetDnsRequest rather than GetDNSRequest. 
Use lower_snake_case for field names, including oneof field and extension names: song_name.
*/
// The greeting request message with the user's name and institution.
message GreetRequest {
  string user_name = 1;     // user's name at the 1st position
  string institution = 2;   // user's institution at the 2nd position
}

// The greeting response message with the constructed message.
message GreetResponse {
  string message = 1;
}

// The multiplication request message including two input double numbers.
message MultRequest {
  double xin = 1;
  double yin = 2;
}

// The multiplication response message including the inputs and the output number.
message MultResponse {
  double xin = 1;
  double yin = 2;
  double result = 3;
}
